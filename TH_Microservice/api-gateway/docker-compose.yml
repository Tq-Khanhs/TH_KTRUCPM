version: '3.8'

services:
  # API Gateway
  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - product-service
      - order-service
      - customer-service
    networks:
      - microservices-network

  # Product Service
  product-service:
    build: ./product-service
    ports:
      - "8081:8081"
    depends_on:
      - postgres-product
      - kafka
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-product:5432/product_db
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
    networks:
      - microservices-network

  # Order Service
  order-service:
    build: ./order-service
    ports:
      - "8082:8082"
    depends_on:
      - postgres-order
      - kafka
      - product-service
      - customer-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-order:5432/order_db
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
      - APP_PRODUCT-SERVICE_URL=http://product-service:8081
      - APP_CUSTOMER-SERVICE_URL=http://customer-service:8083
    networks:
      - microservices-network

  # Customer Service
  customer-service:
    build: ./customer-service
    ports:
      - "8083:8083"
    depends_on:
      - postgres-customer
      - kafka
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-customer:5432/customer_db
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
    networks:
      - microservices-network

  # PostgreSQL for Product Service
  postgres-product:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=product_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres-product-data:/var/lib/postgresql/data
    networks:
      - microservices-network

  # PostgreSQL for Order Service
  postgres-order:
    image: postgres:14
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=order_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres-order-data:/var/lib/postgresql/data
    networks:
      - microservices-network

  # PostgreSQL for Customer Service
  postgres-customer:
    image: postgres:14
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_DB=customer_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres-customer-data:/var/lib/postgresql/data
    networks:
      - microservices-network

  # Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - microservices-network

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

volumes:
  postgres-product-data:
  postgres-order-data:
  postgres-customer-data: